{"version":3,"sources":["models/LoadingState.ts","service/ForumService.ts","pages/common/UserContext.ts","pages/components/CategoryManager.tsx","pages/components/UserManager.tsx","pages/AdminPage.tsx","pages/AnswerPage.tsx","pages/common/QuestionTitle.tsx","pages/CategoryPage.tsx","pages/common/Logout.tsx","pages/common/Navbar.tsx","pages/EditAnswerPage.tsx","pages/EditProfilePage.tsx","pages/EditQuestionPage.tsx","pages/LoginPage.tsx","pages/MainPage.tsx","pages/NewQuestionPage.tsx","pages/ProfilePage.tsx","pages/QuestionPage.tsx","App.tsx","index.tsx"],"names":["LoadingState","service","baseUrl","userCtx","headers","Authorization","token","id","axios","get","this","getHeader","answer","post","put","delete","category","question","user","username","password","UserContext","createContext","CategoryManager","useState","START","load","setLoad","categories","setCategories","editing","setEditing","newCategoryName","setNewCategoryName","editCategoryName","setEditCategoryName","selectedCategoryId","setSelectedCategoryId","error","setError","saved","setSaved","useContext","LOADING","getCategories","then","res","data","className","onSubmit","e","preventDefault","role","placeholder","value","onChange","target","type","onClick","postCategory","name","catch","err","response","disabled","parseInt","map","find","deleteCategoryById","filter","putCategory","findIndex","c","UserManager","users","setUsers","selectedUserId","setSelectedUserId","deleted","setDeleted","getAllUsers","roles","deleteUserById","AdminPage","AnswerPage","setAnswer","setQuestion","params","useParams","history","useHistory","getQuestionById","LOADED","title","description","postAnswer","questionId","text","userId","push","QuestionTitle","props","to","CategoryPage","questions","setQuestions","useEffect","getQuestionsByCategoryId","Logout","setTimeout","setUserCtx","localStorage","removeItem","Navbar","closeNavbar","window","innerWidth","document","querySelector","click","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","aria-controls","aria-label","EditAnswerPage","aId","qId","questionLoad","answerLoad","getAnswerById","Promise","all","putAnswer","time","Date","EditProfilePage","setUsername","email","setEmail","oldPass","setOldPass","newPass","setNewPass","confirmPass","setConfirmPass","getUserById","htmlFor","aria-describedby","oldPassword","newPassword","confirmPassword","putUser","goBack","confirm","EditQuestionPage","setTitle","setDescription","putQuestion","categoryId","LoginPage","setPassword","wrongCredentials","setWrongCredentials","regEmail","setRegEmail","regUsername","setRegUsername","regPassword","setregPassword","regErr","setRegErr","success","setSuccess","login","setItem","JSON","stringify","registerUser","MainPage","getNewestQuestions","NewQuestionPage","postQuestion","ProfilePage","setUser","answered","setAnswered","userLoad","questionsLoad","getQuestionByUserId","answeredLoad","getAnsweredQuestionsByUserId","QuestionPage","answers","setAnswers","answersLoad","getAnswersByQuestionId","toLocaleDateString","toLocaleTimeString","deleteQuestionById","deleteAnswerById","length","App","u","getItem","parse","Provider","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e76f6363.chunk.js","sourcesContent":["export enum LoadingState { START, LOADING, LOADED }","import axios from 'axios';\r\nimport { NewQuestion } from '../models/Question';\r\nimport { Category, NewCategory } from '../models/Category';\r\nimport { EditUser, Login, User } from '../models/User';\r\nimport { Answer, NewAnswer } from '../models/Answer';\r\n\r\nclass ForumService {\r\n    baseUrl = '/api';\r\n\r\n    private getHeader(userCtx: Login) {\r\n        return {\r\n            headers: {\r\n                Authorization: `Bearer ${userCtx.token}`\r\n            }\r\n        }\r\n    }\r\n\r\n    getAnswersByQuestionId(id: number) {\r\n        return axios.get(`${this.baseUrl}/answers/${id}`);\r\n    }\r\n\r\n    getAnswerById(id: number, userCtx: Login) {\r\n        return axios.get(`${this.baseUrl}/answers/answer/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    postAnswer(answer: NewAnswer, userCtx: Login) {\r\n        return axios.post(`${this.baseUrl}/answers/answer`, answer, this.getHeader(userCtx));\r\n    }\r\n\r\n    putAnswer(answer: Answer, userCtx: Login) {\r\n        return axios.put(`${this.baseUrl}/answers/answer`, answer, this.getHeader(userCtx));\r\n    }\r\n\r\n    deleteAnswerById(id: number, userCtx: Login) {\r\n        return axios.delete(`${this.baseUrl}/answers/answer/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    getCategories() {\r\n        return axios.get(`${this.baseUrl}/categories`);\r\n    }\r\n\r\n    postCategory(category: NewCategory, userCtx: Login) {\r\n        return axios.post(`${this.baseUrl}/categories`, category, this.getHeader(userCtx));\r\n    }\r\n\r\n    putCategory(category: Category, userCtx: Login) {\r\n        return axios.put(`${this.baseUrl}/categories`, category, this.getHeader(userCtx));\r\n    }\r\n\r\n    deleteCategoryById(id: number, userCtx: Login) {\r\n        return axios.delete(`${this.baseUrl}/categories/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    getNewestQuestions() {\r\n        return axios.get(`${this.baseUrl}/questions/newest`);\r\n    }\r\n\r\n    getQuestionsByCategoryId(id: number) {\r\n        return axios.get(`${this.baseUrl}/questions/category/${id}`);\r\n    }\r\n\r\n    getQuestionById(id: number) {\r\n        return axios.get(`${this.baseUrl}/questions/question/${id}`);\r\n    }\r\n\r\n    getQuestionByUserId(id: number, userCtx: Login) {\r\n        return axios.get(`${this.baseUrl}/questions/user/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    getAnsweredQuestionsByUserId(id: number, userCtx: Login) {\r\n        return axios.get(`${this.baseUrl}/questions/answeredby/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    postQuestion(question: NewQuestion, userCtx: Login) {\r\n        return axios.post(`${this.baseUrl}/questions/question`, question, this.getHeader(userCtx));\r\n    }\r\n\r\n    putQuestion(question: NewQuestion, userCtx: Login) {\r\n        return axios.put(`${this.baseUrl}/questions/question`, question, this.getHeader(userCtx));\r\n    }\r\n\r\n    deleteQuestionById(id: number, userCtx: Login) {\r\n        return axios.delete(`${this.baseUrl}/questions/question/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    getAllUsers(userCtx: Login) {\r\n        return axios.get(`${this.baseUrl}/users`, this.getHeader(userCtx));\r\n    }\r\n\r\n    getUserById(id: number, userCtx: Login) {\r\n        return axios.get(`${this.baseUrl}/users/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    registerUser(user: User) {\r\n        return axios.post(`${this.baseUrl}/auth/register`, user);\r\n    }\r\n\r\n    putUser(user: EditUser, userCtx: Login) {\r\n        return axios.put(`${this.baseUrl}/users`, user, this.getHeader(userCtx));\r\n    }\r\n\r\n    deleteUserById(id: number, userCtx: Login) {\r\n        return axios.delete(`${this.baseUrl}/users/${id}`, this.getHeader(userCtx));\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return axios.post(`${this.baseUrl}/auth/login`, {username, password});\r\n    }\r\n}\r\n\r\nconst service = new ForumService();\r\n\r\nexport default service;\r\n","import { createContext } from 'react';\r\nimport { Login } from '../../models/User';\r\n\r\nexport const UserContext = createContext<Login>({});\r\n","import React, { useContext, useState } from 'react';\r\nimport { Category } from '../../models/Category';\r\nimport { LoadingState } from '../../models/LoadingState';\r\nimport service from '../../service/ForumService';\r\nimport { UserContext } from '../common/UserContext';\r\n\r\nconst CategoryManager: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [categories, setCategories] = useState<Category[]>([]);\r\n    const [editing, setEditing] = useState<boolean>(false);\r\n    const [newCategoryName, setNewCategoryName] = useState<string>('');\r\n    const [editCategoryName, setEditCategoryName] = useState<string>('');\r\n    const [selectedCategoryId, setSelectedCategoryId] = useState<number>(-1);\r\n    const [error, setError] = useState<string>('');\r\n    const [saved, setSaved] = useState<string>('');\r\n    const userCtx = useContext(UserContext);\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getCategories()\r\n        .then(res => {\r\n            setCategories(res.data);\r\n        });\r\n    }\r\n\r\n    const onAdd = () => {\r\n        if (newCategoryName) {\r\n            service.postCategory({name: newCategoryName}, userCtx)\r\n            .then(res => {\r\n                setCategories([res.data, ...categories]);\r\n                setSaved('Category added');\r\n                setError('');\r\n                setNewCategoryName('');\r\n            })\r\n            .catch(err => {\r\n                setError(err.response.data);\r\n                setSaved('');\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectCategory = (e:  React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedCategoryId(parseInt(e.target.value));\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditCategoryName('');\r\n        setEditing(false);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        if (selectedCategoryId !== -1) {\r\n            service.deleteCategoryById(selectedCategoryId, userCtx)\r\n            .then(res => {\r\n                setCategories(categories.filter(e => e.id !== selectedCategoryId));\r\n                setSelectedCategoryId(-1);\r\n                setSaved('Category deleted');\r\n                setError('');\r\n            });\r\n        }\r\n    }\r\n\r\n    const edit = () => {\r\n        if (selectedCategoryId !== -1) {\r\n            setEditCategoryName(categories.find(e => e.id === selectedCategoryId)!.name);\r\n            setEditing(true);\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        if (editCategoryName) {\r\n            service.putCategory({id: selectedCategoryId, name: editCategoryName}, userCtx)\r\n            .then(res => {\r\n                setEditing(false);\r\n                categories[categories.findIndex(c => c.id === selectedCategoryId)].name = editCategoryName;\r\n                setCategories([...categories]);\r\n                setSaved('Category updated');\r\n                setError('');\r\n            })\r\n            .catch(err => {\r\n                setError(err.response.data);\r\n                setSaved('');\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='form-inline' onSubmit={e => {e.preventDefault(); return false;}}>\r\n            {error && <div className=\"alert alert-danger w-100\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n            {saved && <div className=\"alert alert-success w-100\" role=\"alert\">\r\n                {saved}\r\n            </div>}\r\n\r\n            <div className=\"w-100 mb-2\">\r\n                <input className=\"form-control w-50\" placeholder='Name' value={newCategoryName} onChange={e => setNewCategoryName(e.target.value)} />\r\n                <button className='btn btn-primary ml-2' type='button' onClick={onAdd} disabled={newCategoryName === ''}>Add</button><br />\r\n            </div>\r\n\r\n            <div className=\"w-100\">\r\n                {!editing && <select className='form-control w-50' onChange={selectCategory}>\r\n                    <option value={-1}>Choose...</option>\r\n                    {categories.map(e => (<option value={e.id} key={e.id}>{e.name}</option>))}\r\n                </select>}\r\n                {!editing && <button className='btn btn-primary ml-2' type='button' onClick={edit} disabled={selectedCategoryId === -1}>Edit</button>}\r\n                {!editing && <button className='btn btn-danger ml-2' type='button' onClick={onDelete} disabled={selectedCategoryId === -1}>Delete</button>}\r\n\r\n                {editing && <input className=\"form-control w-50\" placeholder='Name' value={editCategoryName} onChange={e => setEditCategoryName(e.target.value)} />}\r\n                {editing && <button className='btn btn-primary ml-2' type='button' onClick={save}>Save</button>}\r\n                {editing && <button className='btn btn-secondary ml-2' type='button' onClick={cancelEdit}>Cancel</button>}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CategoryManager;\r\n","import React, { useContext, useState } from 'react';\r\nimport { LoadingState } from '../../models/LoadingState';\r\nimport { User } from '../../models/User';\r\nimport service from '../../service/ForumService';\r\nimport { UserContext } from '../common/UserContext';\r\n\r\nconst UserManager: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [selectedUserId, setSelectedUserId] = useState<number>(-1);\r\n    const [deleted, setDeleted] = useState<boolean>(false);\r\n    const userCtx = useContext(UserContext);\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getAllUsers(userCtx)\r\n        .then(res => {\r\n            setUsers(res.data.filter((e: User) => !e.roles?.find(e => e.name === 'ROLE_ADMIN')));\r\n        });\r\n    }\r\n\r\n    const selectUser = (e:  React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedUserId(parseInt(e.target.value));\r\n    }\r\n\r\n    const onDelete = () => {\r\n        if (selectedUserId !== -1) {\r\n            service.deleteUserById(selectedUserId, userCtx)\r\n            .then(res => {\r\n                setUsers(users.filter(e => e.id !== selectedUserId));\r\n                setSelectedUserId(-1);\r\n                setDeleted(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='form-inline' onSubmit={e => {e.preventDefault(); return false;}}>\r\n            {deleted && <div className=\"alert alert-success w-100\" role=\"alert\">\r\n                User deleted;\r\n            </div>}\r\n\r\n            <div className=\"w-100\">\r\n                <select className='form-control w-50' onChange={selectUser}>\r\n                    <option value={-1}>Choose...</option>\r\n                    {users.map(e => (<option value={e.id} key={e.id}>{e.username}</option>))}\r\n                </select>\r\n                <button className='btn btn-danger ml-2' type='button' onClick={onDelete} disabled={selectedUserId === -1}>Delete</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserManager;\r\n","import React from 'react';\r\nimport CategoryManager from './components/CategoryManager';\r\nimport UserManager from './components/UserManager';\r\n\r\nconst AdminPage: React.FC = () => {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row\">\r\n\r\n                <div className='col-12 col-md-6 w-100'>\r\n                    <h1 className='text-center'>Categories:</h1>\r\n                    \r\n                    <CategoryManager />\r\n                </div>\r\n\r\n                <div className='col-12 col-md-6'>\r\n                    <h1 className='text-center'>Users:</h1>\r\n\r\n                    <UserManager />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Question } from '../models/Question';\r\nimport service from '../service/ForumService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst AnswerPage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [answer, setAnswer] = useState<string>('');\r\n    const [question, setQuestion] = useState<Question>();\r\n    const [error, setError] = useState<string>('');\r\n    const params: {id: string} = useParams();\r\n    const id = parseInt(params.id);\r\n    const history = useHistory();\r\n    const userCtx = useContext(UserContext);\r\n    \r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getQuestionById(id)\r\n        .then(res => {\r\n            setQuestion(res.data);\r\n            setLoad(LoadingState.LOADED);\r\n        });\r\n    }\r\n\r\n    const sendAnswer = () => {\r\n        service.postAnswer({\r\n            questionId: id,\r\n            text: answer,\r\n            userId: userCtx.id!\r\n        }, userCtx)\r\n        .then(res => history.push(`/question/${id}`))\r\n        .catch(err => {\r\n            setError(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-3'>\r\n            {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n\r\n            <div className='p-3 bg-light border border-secondary'>\r\n                <h1>{question?.title}</h1>\r\n                <p>{question?.description}</p>\r\n            </div>\r\n\r\n            <textarea className='form-control p-3 mt-3' onChange={e => setAnswer(e.target.value)} value={answer}></textarea>\r\n\r\n            <button className='mt-3 btn btn-primary' onClick={sendAnswer}>Post answer</button>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default AnswerPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Question } from '../../models/Question';\r\n\r\ninterface IQuestionTitle {\r\n    question: Question;\r\n}\r\n\r\nconst QuestionTitle: React.FC<IQuestionTitle> = props => {\r\n    \r\n    return (\r\n        <div className='p-3 mt-3 bg-light border border-secondary'>\r\n            <Link to={`/question/${props.question.id}`}>{props.question.title}</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionTitle;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport QuestionTitle from './common/QuestionTitle';\r\nimport service from '../service/ForumService';\r\nimport { Category } from '../models/Category';\r\nimport { Question } from '../models/Question';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { UserContext } from './common/UserContext';\r\n\r\ninterface ICategoryPage {\r\n    categories: Category[];\r\n}\r\n\r\nconst CategoryPage: React.FC<ICategoryPage> = props => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [questions, setQuestions] = useState<Question[]>([]);\r\n    const params: {id: string} = useParams();\r\n    const id = parseInt(params.id);\r\n    const userCtx = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        setLoad(LoadingState.START);\r\n    }, [params]);\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getQuestionsByCategoryId(id)\r\n        .then(res => {\r\n            setQuestions(res.data);\r\n            setLoad(LoadingState.LOADED);\r\n        });\r\n    }\r\n\r\n    service.getQuestionsByCategoryId(id)\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>{props.categories.find(e => e.id === id)?.name}</h1>\r\n            {userCtx.id && <Link to={`/newquestion/${id}`} className='btn btn-primary'>New question</Link>}\r\n            {questions.map(e => (<QuestionTitle question={e} key={`q-${e.id}`} />))}\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default CategoryPage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Login } from '../../models/User';\r\n\r\ninterface ILogout {\r\n    setUserCtx(userCtx: Login): void;\r\n}\r\nconst Logout: React.FC<ILogout> = props => {\r\n\r\n    // update userCtx after redirect\r\n    setTimeout(() => props.setUserCtx({}), 0);\r\n\r\n    localStorage.removeItem('userCtx');\r\n    \r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Category } from '../../models/Category';\r\nimport { UserContext } from './UserContext';\r\n\r\ninterface INavbar {\r\n    categories: Category[];\r\n}\r\n\r\nconst Navbar: React.FC<INavbar> = props => {\r\n    const userCtx = useContext(UserContext);\r\n\r\n    const closeNavbar = () => { if (window.innerWidth < 992) (document.querySelector(\".navbar-toggler\") as HTMLElement).click() }\r\n\r\n    const categories = (\r\n        <li className=\"nav-item dropdown\" key='catDropdown'>\r\n            <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Categories\r\n            </span>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                {props.categories.map(e => (\r\n                    <Link className=\"dropdown-item\" to={`/category/${e.id}`} key={`cat${e.id}`}\r\n                        onClick={closeNavbar}>\r\n                        {e.name}\r\n                    </Link>))\r\n                }\r\n            <div className=\"dropdown-divider\"></div>\r\n                <Link className=\"dropdown-item\" to='/' onClick={closeNavbar}>\r\n                    Newest\r\n                </Link>\r\n            </div>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark boxrow header\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Forum</Link>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {userCtx.roles?.find(e => e === 'ROLE_ADMIN') && <Link to='/admin' className=\"nav-link\" onClick={closeNavbar}>Admin</Link>}\r\n                        {userCtx.id && <Link to='/profile' className=\"nav-link\" onClick={closeNavbar}>Profile</Link>}\r\n                        {categories}\r\n                        {userCtx.id ? \r\n                            <Link to='/logout' className=\"nav-link\" onClick={closeNavbar}>Log out</Link>\r\n                            : <Link to='/login' className=\"nav-link\" onClick={closeNavbar}>Log in</Link>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Question } from '../models/Question';\r\nimport service from '../service/ForumService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst EditAnswerPage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [answer, setAnswer] = useState<string>('');\r\n    const [question, setQuestion] = useState<Question>();\r\n    const [error, setError] = useState<string>('');\r\n    const params: {aId: string, qId: string} = useParams();\r\n    const aId = parseInt(params.aId);\r\n    const qId = parseInt(params.qId);\r\n    const history = useHistory();\r\n    const userCtx = useContext(UserContext);\r\n    \r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        const questionLoad = service.getQuestionById(qId)\r\n        .then(res => {\r\n            setQuestion(res.data);\r\n        });\r\n\r\n        const answerLoad = service.getAnswerById(aId, userCtx)\r\n        .then(res => {\r\n            setAnswer(res.data.text);\r\n        });\r\n        \r\n        Promise.all([questionLoad, answerLoad])\r\n        .then(() => setLoad(LoadingState.LOADED));\r\n    }\r\n\r\n    const updateAnswer = () => {\r\n        service.putAnswer({\r\n            id: aId,\r\n            questionId: qId,\r\n            text: answer,\r\n            userId: userCtx.id!,\r\n            time: new Date()\r\n        }, userCtx)\r\n        .then(res => history.push(`/question/${qId}`))\r\n        .catch(err => {\r\n            setError(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-3'>\r\n            {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n\r\n            <div className='p-3 bg-light border border-secondary'>\r\n                <h1>{question?.title}</h1>\r\n                <p>{question?.description}</p>\r\n            </div>\r\n\r\n            <textarea className='form-control p-3 mt-3' onChange={e => setAnswer(e.target.value)} value={answer}></textarea>\r\n\r\n            <button className='mt-3 btn btn-primary' onClick={updateAnswer}>Update answer</button>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default EditAnswerPage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { EditUser, User } from '../models/User';\r\nimport service from '../service/ForumService';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst EditProfilePage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [username, setUsername] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [oldPass, setOldPass] = useState<string>('');\r\n    const [newPass, setNewPass] = useState<string>('');\r\n    const [confirmPass, setConfirmPass] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n    const history = useHistory();\r\n    const userCtx = useContext(UserContext);\r\n    \r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n\r\n        service.getUserById(userCtx.id!, userCtx)\r\n        .then(res => {\r\n            const user: User = res.data;\r\n            setUsername(user.username);\r\n            setEmail(user.email);\r\n            setLoad(LoadingState.LOADED);\r\n        });\r\n    }\r\n\r\n    const deleteProfile = () => {\r\n        if (window.confirm('Delete your profile?')) {\r\n            service.deleteUserById(userCtx.id!, userCtx)\r\n            .then(res => {\r\n                localStorage.removeItem('userCtx');\r\n                history.push('/logout');\r\n            })\r\n            .catch(err => {\r\n                setError(err.response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        const user: EditUser = {\r\n            id: userCtx.id!,\r\n            email: email,\r\n            oldPassword: oldPass,\r\n            newPassword: newPass,\r\n            confirmPassword: confirmPass\r\n        }\r\n\r\n        service.putUser(user, userCtx)\r\n        .then(res => {\r\n            history.push('/profiel');\r\n        })\r\n        .catch(err => {\r\n            setError(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container py-3'>\r\n            {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"usernameInput\">Username</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"usernameInput\" aria-describedby=\"usernameHelp\" value={username} disabled />\r\n                <small id=\"usernameHelp\" className=\"form-text text-muted\">You can't change your username.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"emailInput\">Email</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"emailInput\" onChange={e => setEmail(e.target.value)} value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"oldPassInput\">Old assword</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"oldPassInput\" aria-describedby=\"oldPassHelp\" onChange={e => setOldPass(e.target.value)} value={oldPass} />\r\n                <small id=\"oldPassHelp\" className=\"form-text text-muted\">Leave this empty if you don't want to change your password.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"newPassInput\">New password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"newPassInput\" aria-describedby=\"newPassHelp\" onChange={e => setNewPass(e.target.value)} value={newPass} />\r\n                <small id=\"newPassHelp\" className=\"form-text text-muted\">Leave this empty if you don't want to change your password.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"newPassConfirmInput\">Confirm new password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"newPassConfirmInput\" aria-describedby=\"confirmNewPassHelp\" onChange={e => setConfirmPass(e.target.value)} value={confirmPass} />\r\n                <small id=\"confirmNewPassHelp\" className=\"form-text text-muted\">Leave this empty if you don't want to change your password.</small>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={save} >Save</button>\r\n            <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={() => history.goBack()}>Cancel</button>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={deleteProfile}>Delete profile</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProfilePage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport service from '../service/ForumService';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst EditQuestionPage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n    const params: {id: string} = useParams();\r\n    const id = parseInt(params.id);\r\n    const history = useHistory();\r\n    const userCtx = useContext(UserContext);\r\n    \r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getQuestionById(id)\r\n        .then(res => {\r\n            setTitle(res.data.title);\r\n            setDescription(res.data.description);\r\n            setLoad(LoadingState.LOADED);\r\n        });\r\n    }\r\n\r\n    const updateQuestion = () => {\r\n        service.putQuestion({\r\n            id,\r\n            categoryId: id,\r\n            userId: userCtx.id!,\r\n            title,\r\n            description\r\n        }, userCtx)\r\n        .then(res => {\r\n            history.push(`/question/${id}`);\r\n        })\r\n        .catch(err => {\r\n            setError(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>New question</h1>\r\n            {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n            <label htmlFor='title'>Title:</label>\r\n            <input className='form-control mb-3' id='title' type='text' onChange={e => setTitle(e.target.value)} value={title} />\r\n            <label htmlFor='question'>Question:</label>\r\n            <textarea className='form-control mb-3' id='question' onChange={e => setDescription(e.target.value)} value={description}></textarea>\r\n            <button className='btn btn-primary' onClick={updateQuestion}>Update question</button>\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default EditQuestionPage;\r\n","import React, { useState } from 'react';\r\nimport { Login } from '../models/User';\r\nimport service from '../service/ForumService';\r\n\r\ninterface ILoginPage {\r\n    setUserCtx(userCtx: Login): void;\r\n}\r\n\r\nconst LoginPage: React.FC<ILoginPage> = props => {\r\n    const [username, setUsername] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [wrongCredentials, setWrongCredentials] = useState<boolean>(false);\r\n    const [regEmail, setRegEmail] = useState<string>('');\r\n    const [regUsername, setRegUsername] = useState<string>('');\r\n    const [regPassword, setregPassword] = useState<string>('');\r\n    const [regErr, setRegErr] = useState<string>('');\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n\r\n    const login = () => {\r\n        service.login(username, password)\r\n        .then(res => {\r\n            const userCtx = {\r\n                id: res.data.id,\r\n                token: res.data.token,\r\n                roles: res.data.roles\r\n            }\r\n            localStorage.setItem('userCtx', JSON.stringify(userCtx));\r\n            props.setUserCtx(userCtx);\r\n        })\r\n        .catch(res => {\r\n            setWrongCredentials(true);\r\n        });\r\n    }\r\n\r\n    const register = () => {\r\n        service.registerUser({\r\n            username: regUsername,\r\n            email: regEmail,\r\n            password: regPassword\r\n        })\r\n        .then(res => {\r\n            setRegEmail('');\r\n            setRegUsername('');\r\n            setregPassword('');\r\n            setSuccess(true);\r\n        })\r\n        .catch(err => {\r\n            setRegErr(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-around mt-0 mt-lg-5\">\r\n                <div className=\"col-12 col-lg-4 border border-dark rounded mt-2 mt-lg-5\">\r\n                    <h1 className=\"text-center\">Login</h1>\r\n                    {wrongCredentials && <p className=\"text-danger text-center\">Wrong credentials</p>}\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} value={username} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password} />\r\n                        </div>\r\n                        <div className=\"text-center form-group\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={login}>Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-12 col-lg-4 border border-dark rounded mt-2 mt-lg-5\">\r\n                    <h1 className=\"text-center\">Register</h1>\r\n                    {success && <p className=\"text-success text-center\">Successful registration</p>}\r\n                    <form>\r\n                        {regErr && <p className=\"text-danger text-center\">{regErr}</p>}\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" onChange={e => setRegEmail(e.target.value)} value={regEmail} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Name\" onChange={e => setRegUsername(e.target.value)} value={regUsername} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={e => setregPassword(e.target.value)} value={regPassword} />\r\n                        </div>\r\n                        <div className=\"text-center form-group\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={register}>Register</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport QuestionTitle from './common/QuestionTitle';\r\nimport service from '../service/ForumService';\r\nimport { Question } from '../models/Question';\r\nimport { LoadingState } from '../models/LoadingState';\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [questions, setQuestions] = useState<Question[]>([]);\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        service.getNewestQuestions()\r\n        .then(res => {\r\n            const data = res.data;\r\n            data.time = new Date(data.time);\r\n            setQuestions(res.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Newest questions</h1>\r\n            {questions.map(e => (<QuestionTitle question={e} key={`q-${e.id}`} />))}\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default MainPage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport service from '../service/ForumService';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst NewQuestionPage: React.FC = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n    const params: {id: string} = useParams();\r\n    const id = parseInt(params.id);\r\n    const history = useHistory();\r\n    const userCtx = useContext(UserContext);\r\n\r\n    const askQuestion = () => {\r\n        service.postQuestion({\r\n            categoryId: id,\r\n            userId: userCtx.id!,\r\n            title,\r\n            description\r\n        }, userCtx).then(res => {\r\n            history.push(`/question/${res.data.id}`);\r\n        })\r\n        .catch(err => {\r\n            setError(err.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>New question</h1>\r\n            {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                {error}\r\n            </div>}\r\n            <label htmlFor='title'>Title:</label>\r\n            <input className='form-control mb-3' id='title' type='text' onChange={e => setTitle(e.target.value)} value={title} />\r\n            <label htmlFor='question'>Question:</label>\r\n            <textarea className='form-control mb-3' id='question' onChange={e => setDescription(e.target.value)} value={description}></textarea>\r\n            <button className='btn btn-primary' onClick={askQuestion}>Ask question</button>\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default NewQuestionPage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { Question } from '../models/Question';\r\nimport { User } from '../models/User';\r\nimport service from '../service/ForumService';\r\nimport QuestionTitle from './common/QuestionTitle';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst ProfilePage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [user, setUser] = useState<User>();\r\n    const [questions, setQuestions] = useState<Question[]>([]);\r\n    const [answered, setAnswered] = useState<Question[]>([]);\r\n    const userCtx = useContext(UserContext);\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n\r\n        const userLoad = service.getUserById(userCtx.id!, userCtx)\r\n        .then(res => {\r\n            setUser(res.data);\r\n        });\r\n\r\n        const questionsLoad = service.getQuestionByUserId(userCtx.id!, userCtx)\r\n        .then(res => {\r\n            setQuestions(res.data);\r\n        });\r\n\r\n        const answeredLoad = service.getAnsweredQuestionsByUserId(userCtx.id!, userCtx)\r\n        .then(res => {\r\n            setAnswered(res.data);\r\n        });\r\n\r\n        Promise.all([userLoad, questionsLoad, answeredLoad])\r\n        .then(() => setLoad(LoadingState.LOADED));\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row\">\r\n                <div className='col-12 col-md-6'>\r\n                <h1 className='text-center'>Your details:</h1>\r\n                    <div className='row'>\r\n                        <div className='col-6 text-right'>\r\n                            <p>Username:</p>\r\n                            <p>Email:</p>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            <p>{user?.username}</p>\r\n                            <p>{user?.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='text-center'>\r\n                        <Link to='/profile/edit' className='btn btn-primary'>Edit</Link>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='col-12 col-md-6'>\r\n                    <h1 className='text-center'>Your questions:</h1>\r\n                    <div>\r\n                        {questions.map(e => (<QuestionTitle question={e} key={`q-${e.id}`}></QuestionTitle>))}\r\n                    </div>\r\n\r\n                    <h1 className='text-center'>Questions answered:</h1>\r\n                    <div>\r\n                        {answered.map(e => (<QuestionTitle question={e} key={`a-${e.id}`}></QuestionTitle>))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Question } from '../models/Question';\r\nimport service from '../service/ForumService';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Answer } from '../models/Answer';\r\nimport { LoadingState } from '../models/LoadingState';\r\nimport { UserContext } from './common/UserContext';\r\n\r\nconst QuestionPage: React.FC = () => {\r\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\r\n    const [question, setQuestion] = useState<Question>();\r\n    const [answers, setAnswers] = useState<Answer[]>([]);\r\n    const params: {id: string} = useParams();\r\n    const id = parseInt(params.id);\r\n    const userCtx = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    if (load === LoadingState.START) {\r\n        setLoad(LoadingState.LOADING);\r\n        const questionLoad = service.getQuestionById(id)\r\n        .then(res => {\r\n            const data = res.data;\r\n            data.time = new Date(data.time);\r\n            setQuestion(res.data);\r\n        });\r\n\r\n        const answersLoad = service.getAnswersByQuestionId(id)\r\n        .then(res => {\r\n            setAnswers(res.data.map((e: Answer) => {e.time = new Date(e.time); return e}));\r\n        });\r\n\r\n        Promise.all([questionLoad, answersLoad])\r\n        .then(() => setLoad(LoadingState.LOADED));\r\n    }\r\n\r\n    const deleteQuestion = () => {\r\n        if (window.confirm('Delete this question?')) {\r\n            service.deleteQuestionById(id, userCtx)\r\n            .then(res => {\r\n                history.push('/');\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteAnswer = (answer: Answer) => {\r\n        if (window.confirm(`Delete answer: ${answer.text}`)) {\r\n            service.deleteAnswerById(answer.id, userCtx)\r\n            .then(res => {\r\n                setLoad(LoadingState.START);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='p-3 my-3 bg-light border border-secondary'>\r\n                <h1>{question?.title}</h1>\r\n                <p>{question?.description}</p>\r\n                <p className='text-right m-0'>{question?.time.toLocaleDateString()} {question?.time.toLocaleTimeString()}</p>\r\n                {userCtx.id === question?.userId && <Link to={`/question/${id}/edit`} className='btn btn-primary mr-1'>Edit</Link>}\r\n                {userCtx.roles?.find(e => e === 'ROLE_ADMIN') && <button className='btn btn-danger' onClick={deleteQuestion}>Delete</button>}\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            {answers.map(e => (\r\n                <div className='p-3 mt-3 bg-light border border-secondary' key={`a-${e.id}`}>\r\n                    <p className='m-0'>{e.text}</p>\r\n                    <p className='m-0 text-right'>{e.time.toLocaleDateString()} {e.time.toLocaleTimeString()}</p>\r\n                    {userCtx.id === e.userId && <Link to={`/question/${id}/answer/${e.id}`} className='btn btn-primary mr-1'>Edit</Link>}\r\n                    {userCtx.roles?.find(e => e === 'ROLE_ADMIN') && <button className='btn btn-danger' onClick={() => deleteAnswer(e)}>Delete</button>}\r\n                </div>\r\n            ))}\r\n            {!answers.length && <h2>No answers yet.</h2>}\r\n\r\n            {userCtx.id && <Link to={`/answer/${id}`} className='mt-3 btn btn-primary'>Answer</Link>}\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default QuestionPage;\r\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Category } from './models/Category';\nimport { LoadingState } from './models/LoadingState';\nimport { Login } from './models/User';\nimport AdminPage from './pages/AdminPage';\nimport AnswerPage from './pages/AnswerPage';\nimport CategoryPage from './pages/CategoryPage';\nimport Logout from './pages/common/Logout';\nimport Navbar from './pages/common/Navbar';\nimport { UserContext } from './pages/common/UserContext';\nimport EditAnswerPage from './pages/EditAnswerPage';\nimport EditProfilePage from './pages/EditProfilePage';\nimport EditQuestionPage from './pages/EditQuestionPage';\nimport LoginPage from './pages/LoginPage';\nimport MainPage from './pages/MainPage';\nimport NewQuestionPage from './pages/NewQuestionPage';\nimport ProfilePage from './pages/ProfilePage';\nimport QuestionPage from './pages/QuestionPage';\nimport service from './service/ForumService';\n\nconst App: React.FC = () => {\n    const [categories, setCategories] = useState<Category[]>([]);\n    const [load, setLoad] = useState<LoadingState>(LoadingState.START);\n    const [userCtx, setUserCtx] = useState<Login>({});\n\n    if (load === LoadingState.START) {\n        const u = localStorage.getItem('userCtx');\n        if (u) {\n            setUserCtx(JSON.parse(u));\n        }\n\n        setLoad(LoadingState.LOADING);\n        service.getCategories()\n        .then(res => {\n            setCategories(res.data);\n            setLoad(LoadingState.LOADED);\n        });\n    }\n\n    return (\n        <UserContext.Provider value={userCtx}>\n            <Navbar categories={categories} />\n            <Switch>\n                <Route exact path='/'>\n                    <MainPage />\n                </Route>\n                <Route exact path='/question/:id'>\n                    <QuestionPage />\n                </Route>\n                <Route exact path='/question/:id/edit'>\n                    <EditQuestionPage />\n                </Route>\n                <Route exact path='/question/:qId/answer/:aId'>\n                    <EditAnswerPage />\n                </Route>\n                <Route exact path='/answer/:id'>\n                    <AnswerPage />\n                </Route>\n                <Route exact path='/category/:id'>\n                    <CategoryPage categories={categories} />\n                </Route>\n                <Route exact path='/newquestion/:id'>\n                    <NewQuestionPage />\n                </Route>\n                <Route exact path='/login'>\n                    {userCtx.id ? <Redirect to='/' /> : <LoginPage setUserCtx={setUserCtx} />}\n                </Route>\n                <Route exact path='/logout'>\n                    <Logout setUserCtx={setUserCtx} />\n                </Route>\n                <Route exact path='/profile'>\n                    <ProfilePage />\n                </Route>\n                <Route exact path='/profile/edit'>\n                    <EditProfilePage />\n                </Route>\n                <Route exact path='/admin'>\n                    <AdminPage />\n                </Route>\n                <Route path='/'>\n                    <Redirect to='/' />\n                </Route>\n            </Switch>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}